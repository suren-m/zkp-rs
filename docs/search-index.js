var searchIndex = JSON.parse('{\
"zkp_client":{"doc":"zkp_client includes modules and functions used to …","t":[6,17,17,17,17,0,5,5,5,5,5,0,0,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,17,17,3,11,11,11,11,11,11,11,5,11,11,12,11,11,11,11,12,11],"n":["Callback","MAX_SECRET_VAL","MAX_SEED_VAL","MAX_USERNAME_LEN","MIN_SEED_VAL","auth","connect","init_logger","init_zkp_flow","login_callback","print_errors","seed","user","check_status","create_auth_request","create_register_commits","make_request","prove_auth","register_user_with_server","Seed","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","ne","new","to_owned","try_from","try_into","type_id","val","vzip","SECRET","USERNAME","UserInfo","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_user_info_from_env_vars","into","ne","secret","to_owned","try_from","try_into","type_id","username","vzip"],"q":["zkp_client","","","","","","","","","","","","","zkp_client::auth","","","","","","zkp_client::seed","","","","","","","","","","","","","","","","","zkp_client::user","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Uses <code>TCPStream::connect</code> to establish connection to server …","Env Logger level <code>info</code>. Set <code>$RUST_LOG</code> env variable …","create_commitsregister_user_with_serverprove authenticity …","","Prints any errors that occur during env variables …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Random u32 number","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5],"f":[0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[5,1,6],[[4,[3]]]],[[1,5],[[4,[3]]]],[[[7,[3]]]],0,0,[[2,8],[[4,[9,3]]]],[[2,8],[[4,[9,3]]]],[[10,11],12],[[2,13],[[4,[9,3]]]],[[2,8,14],[[4,[9,3]]]],[[2,8,12],[[4,[9,3]]]],0,[[]],[[]],[10,10],[[]],[[10,10],15],[[10,16],17],[[]],[[]],[[10,10],15],[[],10],[[]],[[],4],[[],4],[[],18],0,[[]],0,0,0,[[]],[[]],[5,5],[[]],[[5,5],15],[[5,16],17],[[]],[[],[[4,[5,[7,[3]]]]]],[[]],[[5,5],15],0,[[]],[[],4],[[],4],[[],18],0,[[]]],"p":[[15,"str"],[3,"TcpStream"],[3,"Error"],[4,"Result"],[3,"UserInfo"],[6,"Callback"],[3,"Vec"],[6,"Username"],[4,"ServerResponse"],[3,"Seed"],[15,"u32"],[3,"Commits"],[4,"ClientRequest"],[6,"Answer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"zkp_common":{"doc":"zkp_common includes public constants <code>G</code> and <code>H</code> and data …","t":[17,17,0,0,5,6,13,13,4,3,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["G","H","request_dto","response_dto","write_and_flush_stream","Answer","Authenticate","CheckStatus","ClientRequest","Commits","ProveAuthentication","Register","Username","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","fmt","fmt","from","from","into","into","r1","r2","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y1","y2","0","0","0","0","1","1","Challenge","Failure","ServerResponse","Success","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","0","0"],"q":["zkp_common","","","","","zkp_common::request_dto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zkp_common::request_dto::ClientRequest","","","","","","zkp_common::response_dto","","","","","","","","","","","","","","","","","zkp_common::response_dto::ServerResponse",""],"d":["","","","","","","","","","r1, r2 from client","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,6,6,0,0,6,6,0,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,5,5,6,5,6,5,6,5,6,5,6,5,5,11,12,13,14,11,13,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,16],"f":[0,0,0,0,[[1,2],[[4,[3]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[5,5],[6,6],[[]],[[]],[[],[[4,[5]]]],[[],[[4,[6]]]],[[5,7],8],[[6,7],8],[[]],[[]],[[]],[[]],0,0,[5,4],[6,4],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[10,10],[[]],[[],[[4,[10]]]],[[10,7],8],[[]],[[]],[10,4],[[]],[[],4],[[],4],[[],9],0,0],"p":[[3,"TcpStream"],[8,"Serialize"],[3,"Error"],[4,"Result"],[3,"Commits"],[4,"ClientRequest"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[4,"ServerResponse"],[13,"Register"],[13,"Authenticate"],[13,"ProveAuthentication"],[13,"CheckStatus"],[13,"Challenge"],[13,"Failure"]]},\
"zkp_server":{"doc":"zkp_server includes modules and functions that <code>zkp_client</code> …","t":[17,0,0,5,5,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,3,3,11,11,11,11,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11],"n":["MAX_CHALLENGE_VAL","challenge","handlers","init_logger","init_session_store","session_store","Challenge","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","into","ne","new","serialize","to_owned","try_from","try_into","type_id","val","vzip","handle_request","SessionStore","User","borrow","borrow","borrow_mut","borrow_mut","challenge","commits","fmt","from","from","into","into","is_verified","last_login","last_verified","new","register","remove","try_from","try_from","try_into","try_into","type_id","type_id","username","users","vzip","vzip"],"q":["zkp_server","","","","","","zkp_server::challenge","","","","","","","","","","","","","","","","","","","zkp_server::handlers","zkp_server::session_store","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Random u128 number","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,1,11,1,11,11,11,11,1,11,1,11,11,11,11,1,1,1,1,11,1,11,1,11,11,1,1,11],"f":[0,0,0,[[]],[[],1],0,0,[[]],[[]],[2,2],[[]],[[],[[3,[2]]]],[[2,2],4],[[2,5],6],[[]],[[]],[[2,2],4],[[],2],[2,3],[[]],[[],3],[[],3],[[],7],0,[[]],[[8,1,9],[[3,[10]]]],0,0,[[]],[[]],[[]],[[]],0,0,[[11,5],6],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[1,12,13]],[[1,12],[[14,[11]]]],[[],3],[[],3],[[],3],[[],3],[[],7],[[],7],0,0,[[]],[[]]],"p":[[3,"SessionStore"],[3,"Challenge"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[4,"ClientRequest"],[3,"TcpStream"],[3,"Error"],[3,"User"],[6,"Username"],[3,"Commits"],[4,"Option"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
